name: Prepare new release

on:
  push:
    tags:
      - '*'

jobs:

  build:
    name: Continuous integration
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.9

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Maven package
        run: mvn -B clean package -DskipTests

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build_output
          path: webapi/target/

      - name: Maven verify
        run: mvn -B clean verify jacoco:report coveralls:report -DrepoToken=${{ secrets.COVERALL_TOKEN }}

  docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-20.04
    needs: [ build ]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.9

      - uses: actions/download-artifact@v2
        with:
          name: build_output
          path: webapi/target

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: carlomicieli/spring-trains:latest,carlomicieli/spring-trains:${{ steps.get_version.outputs.version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
